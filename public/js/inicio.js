/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/inicio.js":
/*!********************************!*\
  !*** ./resources/js/inicio.js ***!
  \********************************/
/***/ (() => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function ($) {\n  \"use strict\";\n\n  // NAVBAR\n  $('.navbar-nav .nav-link').click(function () {\n    $(\".navbar-collapse\").collapse('hide');\n  });\n\n  // PROJECTS IMAGE RESIZE\n  function NewsImageResize() {\n    var LargeImage = $('.projects-thumb-small .projects-image').height();\n    $('.projects-thumb-large').css('height', LargeImage + 'px');\n  }\n  $(window).on(\"resize\", NewsImageResize);\n  $(document).on(\"ready\", NewsImageResize);\n  $('.custom-link').click(function () {\n    var el = $(this).attr('href');\n    var elWrapped = $(el);\n    var header_height = $('.navbar').height() + 10;\n    scrollToDiv(elWrapped, header_height);\n    return false;\n    function scrollToDiv(element, navheight) {\n      var offset = element.offset();\n      var offsetTop = offset.top;\n      var totalScroll = offsetTop - navheight;\n      $('body,html').animate({\n        scrollTop: totalScroll\n      }, 300);\n    }\n  });\n})(window.jQuery);\n\n//jquery-click-scroll\n//by syamsul'isul' Arifin\n\nvar sectionArray = [1, 2, 3, 4, 5];\n$.each(sectionArray, function (index, value) {\n  $(document).scroll(function () {\n    var offsetSection = $('#' + 'section_' + value).offset().top - 86;\n    var docScroll = $(document).scrollTop();\n    var docScroll1 = docScroll + 1;\n    if (docScroll1 >= offsetSection) {\n      $('.navbar-nav .nav-item .nav-link').removeClass('active');\n      $('.navbar-nav .nav-item .nav-link:link').addClass('inactive');\n      $('.navbar-nav .nav-item .nav-link').eq(index).addClass('active');\n      $('.navbar-nav .nav-item .nav-link').eq(index).removeClass('inactive');\n    }\n  });\n  $('.click-scroll').eq(index).click(function (e) {\n    var offsetClick = $('#' + 'section_' + value).offset().top - 86;\n    e.preventDefault();\n    $('html, body').animate({\n      'scrollTop': offsetClick\n    }, 300);\n  });\n});\n$(document).ready(function () {\n  $('.navbar-nav .nav-item .nav-link:link').addClass('inactive');\n  $('.navbar-nav .nav-item .nav-link').eq(0).addClass('active');\n  $('.navbar-nav .nav-item .nav-link:link').eq(0).removeClass('inactive');\n});\n\n// Sticky Plugin v1.0.3 for jQuery\n// =============\n// Author: Anthony Garand\n// Improvements by German M. Bravo (Kronuz) and Ruud Kamphuis (ruudk)\n// Improvements by Leonardo C. Daronco (daronco)\n// Created: 02/14/2011\n// Date: 07/20/2015\n// Website: http://stickyjs.com/\n// Description: Makes an element on the page stick on the screen as you scroll\n//              It will only set the 'top' and 'position' of your element, you\n//              might need to adjust the width in some cases.\n\n(function ($) {\n  var slice = Array.prototype.slice; // save ref to original slice()\n  var splice = Array.prototype.splice; // save ref to original slice()\n\n  var defaults = {\n      topSpacing: 0,\n      bottomSpacing: 0,\n      className: 'is-sticky',\n      wrapperClassName: 'sticky-wrapper',\n      center: false,\n      getWidthFrom: '',\n      widthFromWrapper: true,\n      // works only when .getWidthFrom is empty\n      responsiveWidth: false\n    },\n    $window = $(window),\n    $document = $(document),\n    sticked = [],\n    windowHeight = $window.height(),\n    scroller = function scroller() {\n      var scrollTop = $window.scrollTop(),\n        documentHeight = $document.height(),\n        dwh = documentHeight - windowHeight,\n        extra = scrollTop > dwh ? dwh - scrollTop : 0;\n      for (var i = 0; i < sticked.length; i++) {\n        var s = sticked[i],\n          elementTop = s.stickyWrapper.offset().top,\n          etse = elementTop - s.topSpacing - extra;\n\n        //update height in case of dynamic content\n        s.stickyWrapper.css('height', s.stickyElement.outerHeight());\n        if (scrollTop <= etse) {\n          if (s.currentTop !== null) {\n            s.stickyElement.css({\n              'width': '',\n              'position': '',\n              'top': ''\n            });\n            s.stickyElement.parent().removeClass(s.className);\n            s.stickyElement.trigger('sticky-end', [s]);\n            s.currentTop = null;\n          }\n        } else {\n          var newTop = documentHeight - s.stickyElement.outerHeight() - s.topSpacing - s.bottomSpacing - scrollTop - extra;\n          if (newTop < 0) {\n            newTop = newTop + s.topSpacing;\n          } else {\n            newTop = s.topSpacing;\n          }\n          if (s.currentTop != newTop) {\n            var newWidth;\n            if (s.getWidthFrom) {\n              newWidth = $(s.getWidthFrom).width() || null;\n            } else if (s.widthFromWrapper) {\n              newWidth = s.stickyWrapper.width();\n            }\n            if (newWidth == null) {\n              newWidth = s.stickyElement.width();\n            }\n            s.stickyElement.css('width', newWidth).css('position', 'fixed').css('top', newTop);\n            s.stickyElement.parent().addClass(s.className);\n            if (s.currentTop === null) {\n              s.stickyElement.trigger('sticky-start', [s]);\n            } else {\n              // sticky is started but it have to be repositioned\n              s.stickyElement.trigger('sticky-update', [s]);\n            }\n            if (s.currentTop === s.topSpacing && s.currentTop > newTop || s.currentTop === null && newTop < s.topSpacing) {\n              // just reached bottom || just started to stick but bottom is already reached\n              s.stickyElement.trigger('sticky-bottom-reached', [s]);\n            } else if (s.currentTop !== null && newTop === s.topSpacing && s.currentTop < newTop) {\n              // sticky is started && sticked at topSpacing && overflowing from top just finished\n              s.stickyElement.trigger('sticky-bottom-unreached', [s]);\n            }\n            s.currentTop = newTop;\n          }\n        }\n      }\n    },\n    resizer = function resizer() {\n      windowHeight = $window.height();\n      for (var i = 0; i < sticked.length; i++) {\n        var s = sticked[i];\n        var newWidth = null;\n        if (s.getWidthFrom) {\n          if (s.responsiveWidth === true) {\n            newWidth = $(s.getWidthFrom).width();\n          }\n        } else if (s.widthFromWrapper) {\n          newWidth = s.stickyWrapper.width();\n        }\n        if (newWidth != null) {\n          s.stickyElement.css('width', newWidth);\n        }\n      }\n    },\n    methods = {\n      init: function init(options) {\n        var o = $.extend({}, defaults, options);\n        return this.each(function () {\n          var stickyElement = $(this);\n          var stickyId = stickyElement.attr('id');\n          var stickyHeight = stickyElement.outerHeight();\n          var wrapperId = stickyId ? stickyId + '-' + defaults.wrapperClassName : defaults.wrapperClassName;\n          var wrapper = $('<div></div>').attr('id', wrapperId).addClass(o.wrapperClassName);\n          stickyElement.wrapAll(wrapper);\n          var stickyWrapper = stickyElement.parent();\n          if (o.center) {\n            stickyWrapper.css({\n              width: stickyElement.outerWidth(),\n              marginLeft: \"auto\",\n              marginRight: \"auto\"\n            });\n          }\n          if (stickyElement.css(\"float\") == \"right\") {\n            stickyElement.css({\n              \"float\": \"none\"\n            }).parent().css({\n              \"float\": \"right\"\n            });\n          }\n          stickyWrapper.css('height', stickyHeight);\n          o.stickyElement = stickyElement;\n          o.stickyWrapper = stickyWrapper;\n          o.currentTop = null;\n          sticked.push(o);\n        });\n      },\n      update: scroller,\n      unstick: function unstick(options) {\n        return this.each(function () {\n          var that = this;\n          var unstickyElement = $(that);\n          var removeIdx = -1;\n          var i = sticked.length;\n          while (i-- > 0) {\n            if (sticked[i].stickyElement.get(0) === that) {\n              splice.call(sticked, i, 1);\n              removeIdx = i;\n            }\n          }\n          if (removeIdx != -1) {\n            unstickyElement.unwrap();\n            unstickyElement.css({\n              'width': '',\n              'position': '',\n              'top': '',\n              'float': ''\n            });\n          }\n        });\n      }\n    };\n\n  // should be more efficient than using $window.scroll(scroller) and $window.resize(resizer):\n  if (window.addEventListener) {\n    window.addEventListener('scroll', scroller, false);\n    window.addEventListener('resize', resizer, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('onscroll', scroller);\n    window.attachEvent('onresize', resizer);\n  }\n  $.fn.sticky = function (method) {\n    if (methods[method]) {\n      return methods[method].apply(this, slice.call(arguments, 1));\n    } else if (_typeof(method) === 'object' || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\n    }\n  };\n  $.fn.unstick = function (method) {\n    if (methods[method]) {\n      return methods[method].apply(this, slice.call(arguments, 1));\n    } else if (_typeof(method) === 'object' || !method) {\n      return methods.unstick.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\n    }\n  };\n  $(function () {\n    setTimeout(scroller, 0);\n  });\n})(jQuery);\n$(document).ready(function () {\n  $(\".navbar\").sticky({\n    topSpacing: 0\n  });\n});\n$(document).ready(function () {\n  // MagnificPopup\n  var magnifPopup = function magnifPopup() {\n    $('.popup-youtube').magnificPopup({\n      type: 'iframe',\n      mainClass: 'mfp-fade',\n      removalDelay: 160,\n      preloader: false,\n      fixedContentPos: false\n    });\n  };\n\n  // Call the functions\n  magnifPopup();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwiY2xpY2siLCJjb2xsYXBzZSIsIk5ld3NJbWFnZVJlc2l6ZSIsIkxhcmdlSW1hZ2UiLCJoZWlnaHQiLCJjc3MiLCJ3aW5kb3ciLCJvbiIsImRvY3VtZW50IiwiZWwiLCJhdHRyIiwiZWxXcmFwcGVkIiwiaGVhZGVyX2hlaWdodCIsInNjcm9sbFRvRGl2IiwiZWxlbWVudCIsIm5hdmhlaWdodCIsIm9mZnNldCIsIm9mZnNldFRvcCIsInRvcCIsInRvdGFsU2Nyb2xsIiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsImpRdWVyeSIsInNlY3Rpb25BcnJheSIsImVhY2giLCJpbmRleCIsInZhbHVlIiwic2Nyb2xsIiwib2Zmc2V0U2VjdGlvbiIsImRvY1Njcm9sbCIsImRvY1Njcm9sbDEiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiZXEiLCJlIiwib2Zmc2V0Q2xpY2siLCJwcmV2ZW50RGVmYXVsdCIsInJlYWR5Iiwic2xpY2UiLCJBcnJheSIsInByb3RvdHlwZSIsInNwbGljZSIsImRlZmF1bHRzIiwidG9wU3BhY2luZyIsImJvdHRvbVNwYWNpbmciLCJjbGFzc05hbWUiLCJ3cmFwcGVyQ2xhc3NOYW1lIiwiY2VudGVyIiwiZ2V0V2lkdGhGcm9tIiwid2lkdGhGcm9tV3JhcHBlciIsInJlc3BvbnNpdmVXaWR0aCIsIiR3aW5kb3ciLCIkZG9jdW1lbnQiLCJzdGlja2VkIiwid2luZG93SGVpZ2h0Iiwic2Nyb2xsZXIiLCJkb2N1bWVudEhlaWdodCIsImR3aCIsImV4dHJhIiwiaSIsImxlbmd0aCIsInMiLCJlbGVtZW50VG9wIiwic3RpY2t5V3JhcHBlciIsImV0c2UiLCJzdGlja3lFbGVtZW50Iiwib3V0ZXJIZWlnaHQiLCJjdXJyZW50VG9wIiwicGFyZW50IiwidHJpZ2dlciIsIm5ld1RvcCIsIm5ld1dpZHRoIiwid2lkdGgiLCJyZXNpemVyIiwibWV0aG9kcyIsImluaXQiLCJvcHRpb25zIiwibyIsImV4dGVuZCIsInN0aWNreUlkIiwic3RpY2t5SGVpZ2h0Iiwid3JhcHBlcklkIiwid3JhcHBlciIsIndyYXBBbGwiLCJvdXRlcldpZHRoIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwicHVzaCIsInVwZGF0ZSIsInVuc3RpY2siLCJ0aGF0IiwidW5zdGlja3lFbGVtZW50IiwicmVtb3ZlSWR4IiwiZ2V0IiwiY2FsbCIsInVud3JhcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsImZuIiwic3RpY2t5IiwibWV0aG9kIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfdHlwZW9mIiwiZXJyb3IiLCJzZXRUaW1lb3V0IiwibWFnbmlmUG9wdXAiLCJtYWduaWZpY1BvcHVwIiwidHlwZSIsIm1haW5DbGFzcyIsInJlbW92YWxEZWxheSIsInByZWxvYWRlciIsImZpeGVkQ29udGVudFBvcyJdLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvaW5pY2lvLmpzPzA1NmIiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkKSB7XG5cbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIC8vIE5BVkJBUlxuICAgICQoJy5uYXZiYXItbmF2IC5uYXYtbGluaycpLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgICAgICQoXCIubmF2YmFyLWNvbGxhcHNlXCIpLmNvbGxhcHNlKCdoaWRlJyk7XG4gICAgfSk7XG5cbiAgICAvLyBQUk9KRUNUUyBJTUFHRSBSRVNJWkVcbiAgICAgIGZ1bmN0aW9uIE5ld3NJbWFnZVJlc2l6ZSgpe1xuICAgICAgICB2YXIgTGFyZ2VJbWFnZSA9ICQoJy5wcm9qZWN0cy10aHVtYi1zbWFsbCAucHJvamVjdHMtaW1hZ2UnKS5oZWlnaHQoKTtcblxuICAgICAgICAkKCcucHJvamVjdHMtdGh1bWItbGFyZ2UnKS5jc3MoJ2hlaWdodCcsIExhcmdlSW1hZ2UgKyAncHgnKTtcbiAgICAgIH1cblxuICAgICAgJCh3aW5kb3cpLm9uKFwicmVzaXplXCIsIE5ld3NJbWFnZVJlc2l6ZSk7XG4gICAgICAkKGRvY3VtZW50KS5vbihcInJlYWR5XCIsIE5ld3NJbWFnZVJlc2l6ZSk7XG5cbiAgICAgICQoJy5jdXN0b20tbGluaycpLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgZWwgPSAkKHRoaXMpLmF0dHIoJ2hyZWYnKTtcbiAgICAgIHZhciBlbFdyYXBwZWQgPSAkKGVsKTtcbiAgICAgIHZhciBoZWFkZXJfaGVpZ2h0ID0gJCgnLm5hdmJhcicpLmhlaWdodCgpICsgMTA7XG5cbiAgICAgIHNjcm9sbFRvRGl2KGVsV3JhcHBlZCxoZWFkZXJfaGVpZ2h0KTtcbiAgICAgIHJldHVybiBmYWxzZTtcblxuICAgICAgZnVuY3Rpb24gc2Nyb2xsVG9EaXYoZWxlbWVudCxuYXZoZWlnaHQpe1xuICAgICAgICB2YXIgb2Zmc2V0ID0gZWxlbWVudC5vZmZzZXQoKTtcbiAgICAgICAgdmFyIG9mZnNldFRvcCA9IG9mZnNldC50b3A7XG4gICAgICAgIHZhciB0b3RhbFNjcm9sbCA9IG9mZnNldFRvcC1uYXZoZWlnaHQ7XG5cbiAgICAgICAgJCgnYm9keSxodG1sJykuYW5pbWF0ZSh7XG4gICAgICAgIHNjcm9sbFRvcDogdG90YWxTY3JvbGxcbiAgICAgICAgfSwgMzAwKTtcbiAgICB9XG4gIH0pO1xuXG4gICAgfSkod2luZG93LmpRdWVyeSk7XG5cblxuXG4vL2pxdWVyeS1jbGljay1zY3JvbGxcbi8vYnkgc3lhbXN1bCdpc3VsJyBBcmlmaW5cblxudmFyIHNlY3Rpb25BcnJheSA9IFsxLCAyLCAzLCA0LCA1XTtcblxuJC5lYWNoKHNlY3Rpb25BcnJheSwgZnVuY3Rpb24oaW5kZXgsIHZhbHVlKXtcblxuICAgICAkKGRvY3VtZW50KS5zY3JvbGwoZnVuY3Rpb24oKXtcbiAgICAgICAgIHZhciBvZmZzZXRTZWN0aW9uID0gJCgnIycgKyAnc2VjdGlvbl8nICsgdmFsdWUpLm9mZnNldCgpLnRvcCAtIDg2O1xuICAgICAgICAgdmFyIGRvY1Njcm9sbCA9ICQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpO1xuICAgICAgICAgdmFyIGRvY1Njcm9sbDEgPSBkb2NTY3JvbGwgKyAxO1xuXG5cbiAgICAgICAgIGlmICggZG9jU2Nyb2xsMSA+PSBvZmZzZXRTZWN0aW9uICl7XG4gICAgICAgICAgICAgJCgnLm5hdmJhci1uYXYgLm5hdi1pdGVtIC5uYXYtbGluaycpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAkKCcubmF2YmFyLW5hdiAubmF2LWl0ZW0gLm5hdi1saW5rOmxpbmsnKS5hZGRDbGFzcygnaW5hY3RpdmUnKTtcbiAgICAgICAgICAgICAkKCcubmF2YmFyLW5hdiAubmF2LWl0ZW0gLm5hdi1saW5rJykuZXEoaW5kZXgpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAkKCcubmF2YmFyLW5hdiAubmF2LWl0ZW0gLm5hdi1saW5rJykuZXEoaW5kZXgpLnJlbW92ZUNsYXNzKCdpbmFjdGl2ZScpO1xuICAgICAgICAgfVxuXG4gICAgIH0pO1xuXG4gICAgJCgnLmNsaWNrLXNjcm9sbCcpLmVxKGluZGV4KS5jbGljayhmdW5jdGlvbihlKXtcbiAgICAgICAgdmFyIG9mZnNldENsaWNrID0gJCgnIycgKyAnc2VjdGlvbl8nICsgdmFsdWUpLm9mZnNldCgpLnRvcCAtIDg2O1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICAgICdzY3JvbGxUb3AnOm9mZnNldENsaWNrXG4gICAgICAgIH0sIDMwMClcbiAgICB9KTtcblxufSk7XG5cbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XG4gICAgJCgnLm5hdmJhci1uYXYgLm5hdi1pdGVtIC5uYXYtbGluazpsaW5rJykuYWRkQ2xhc3MoJ2luYWN0aXZlJyk7XG4gICAgJCgnLm5hdmJhci1uYXYgLm5hdi1pdGVtIC5uYXYtbGluaycpLmVxKDApLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAkKCcubmF2YmFyLW5hdiAubmF2LWl0ZW0gLm5hdi1saW5rOmxpbmsnKS5lcSgwKS5yZW1vdmVDbGFzcygnaW5hY3RpdmUnKTtcbn0pO1xuXG4vLyBTdGlja3kgUGx1Z2luIHYxLjAuMyBmb3IgalF1ZXJ5XG4vLyA9PT09PT09PT09PT09XG4vLyBBdXRob3I6IEFudGhvbnkgR2FyYW5kXG4vLyBJbXByb3ZlbWVudHMgYnkgR2VybWFuIE0uIEJyYXZvIChLcm9udXopIGFuZCBSdXVkIEthbXBodWlzIChydXVkaylcbi8vIEltcHJvdmVtZW50cyBieSBMZW9uYXJkbyBDLiBEYXJvbmNvIChkYXJvbmNvKVxuLy8gQ3JlYXRlZDogMDIvMTQvMjAxMVxuLy8gRGF0ZTogMDcvMjAvMjAxNVxuLy8gV2Vic2l0ZTogaHR0cDovL3N0aWNreWpzLmNvbS9cbi8vIERlc2NyaXB0aW9uOiBNYWtlcyBhbiBlbGVtZW50IG9uIHRoZSBwYWdlIHN0aWNrIG9uIHRoZSBzY3JlZW4gYXMgeW91IHNjcm9sbFxuLy8gICAgICAgICAgICAgIEl0IHdpbGwgb25seSBzZXQgdGhlICd0b3AnIGFuZCAncG9zaXRpb24nIG9mIHlvdXIgZWxlbWVudCwgeW91XG4vLyAgICAgICAgICAgICAgbWlnaHQgbmVlZCB0byBhZGp1c3QgdGhlIHdpZHRoIGluIHNvbWUgY2FzZXMuXG5cbihmdW5jdGlvbigkKSB7XG4gICAgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlOyAvLyBzYXZlIHJlZiB0byBvcmlnaW5hbCBzbGljZSgpXG4gICAgdmFyIHNwbGljZSA9IEFycmF5LnByb3RvdHlwZS5zcGxpY2U7IC8vIHNhdmUgcmVmIHRvIG9yaWdpbmFsIHNsaWNlKClcblxuICB2YXIgZGVmYXVsdHMgPSB7XG4gICAgICB0b3BTcGFjaW5nOiAwLFxuICAgICAgYm90dG9tU3BhY2luZzogMCxcbiAgICAgIGNsYXNzTmFtZTogJ2lzLXN0aWNreScsXG4gICAgICB3cmFwcGVyQ2xhc3NOYW1lOiAnc3RpY2t5LXdyYXBwZXInLFxuICAgICAgY2VudGVyOiBmYWxzZSxcbiAgICAgIGdldFdpZHRoRnJvbTogJycsXG4gICAgICB3aWR0aEZyb21XcmFwcGVyOiB0cnVlLCAvLyB3b3JrcyBvbmx5IHdoZW4gLmdldFdpZHRoRnJvbSBpcyBlbXB0eVxuICAgICAgcmVzcG9uc2l2ZVdpZHRoOiBmYWxzZVxuICAgIH0sXG4gICAgJHdpbmRvdyA9ICQod2luZG93KSxcbiAgICAkZG9jdW1lbnQgPSAkKGRvY3VtZW50KSxcbiAgICBzdGlja2VkID0gW10sXG4gICAgd2luZG93SGVpZ2h0ID0gJHdpbmRvdy5oZWlnaHQoKSxcbiAgICBzY3JvbGxlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHNjcm9sbFRvcCA9ICR3aW5kb3cuc2Nyb2xsVG9wKCksXG4gICAgICAgIGRvY3VtZW50SGVpZ2h0ID0gJGRvY3VtZW50LmhlaWdodCgpLFxuICAgICAgICBkd2ggPSBkb2N1bWVudEhlaWdodCAtIHdpbmRvd0hlaWdodCxcbiAgICAgICAgZXh0cmEgPSAoc2Nyb2xsVG9wID4gZHdoKSA/IGR3aCAtIHNjcm9sbFRvcCA6IDA7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RpY2tlZC5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcyA9IHN0aWNrZWRbaV0sXG4gICAgICAgICAgZWxlbWVudFRvcCA9IHMuc3RpY2t5V3JhcHBlci5vZmZzZXQoKS50b3AsXG4gICAgICAgICAgZXRzZSA9IGVsZW1lbnRUb3AgLSBzLnRvcFNwYWNpbmcgLSBleHRyYTtcblxuICAgIC8vdXBkYXRlIGhlaWdodCBpbiBjYXNlIG9mIGR5bmFtaWMgY29udGVudFxuICAgIHMuc3RpY2t5V3JhcHBlci5jc3MoJ2hlaWdodCcsIHMuc3RpY2t5RWxlbWVudC5vdXRlckhlaWdodCgpKTtcblxuICAgICAgICBpZiAoc2Nyb2xsVG9wIDw9IGV0c2UpIHtcbiAgICAgICAgICBpZiAocy5jdXJyZW50VG9wICE9PSBudWxsKSB7XG4gICAgICAgICAgICBzLnN0aWNreUVsZW1lbnRcbiAgICAgICAgICAgICAgLmNzcyh7XG4gICAgICAgICAgICAgICAgJ3dpZHRoJzogJycsXG4gICAgICAgICAgICAgICAgJ3Bvc2l0aW9uJzogJycsXG4gICAgICAgICAgICAgICAgJ3RvcCc6ICcnXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcy5zdGlja3lFbGVtZW50LnBhcmVudCgpLnJlbW92ZUNsYXNzKHMuY2xhc3NOYW1lKTtcbiAgICAgICAgICAgIHMuc3RpY2t5RWxlbWVudC50cmlnZ2VyKCdzdGlja3ktZW5kJywgW3NdKTtcbiAgICAgICAgICAgIHMuY3VycmVudFRvcCA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHZhciBuZXdUb3AgPSBkb2N1bWVudEhlaWdodCAtIHMuc3RpY2t5RWxlbWVudC5vdXRlckhlaWdodCgpXG4gICAgICAgICAgICAtIHMudG9wU3BhY2luZyAtIHMuYm90dG9tU3BhY2luZyAtIHNjcm9sbFRvcCAtIGV4dHJhO1xuICAgICAgICAgIGlmIChuZXdUb3AgPCAwKSB7XG4gICAgICAgICAgICBuZXdUb3AgPSBuZXdUb3AgKyBzLnRvcFNwYWNpbmc7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ld1RvcCA9IHMudG9wU3BhY2luZztcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHMuY3VycmVudFRvcCAhPSBuZXdUb3ApIHtcbiAgICAgICAgICAgIHZhciBuZXdXaWR0aDtcbiAgICAgICAgICAgIGlmIChzLmdldFdpZHRoRnJvbSkge1xuICAgICAgICAgICAgICAgIG5ld1dpZHRoID0gJChzLmdldFdpZHRoRnJvbSkud2lkdGgoKSB8fCBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzLndpZHRoRnJvbVdyYXBwZXIpIHtcbiAgICAgICAgICAgICAgICBuZXdXaWR0aCA9IHMuc3RpY2t5V3JhcHBlci53aWR0aCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5ld1dpZHRoID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBuZXdXaWR0aCA9IHMuc3RpY2t5RWxlbWVudC53aWR0aCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcy5zdGlja3lFbGVtZW50XG4gICAgICAgICAgICAgIC5jc3MoJ3dpZHRoJywgbmV3V2lkdGgpXG4gICAgICAgICAgICAgIC5jc3MoJ3Bvc2l0aW9uJywgJ2ZpeGVkJylcbiAgICAgICAgICAgICAgLmNzcygndG9wJywgbmV3VG9wKTtcblxuICAgICAgICAgICAgcy5zdGlja3lFbGVtZW50LnBhcmVudCgpLmFkZENsYXNzKHMuY2xhc3NOYW1lKTtcblxuICAgICAgICAgICAgaWYgKHMuY3VycmVudFRvcCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICBzLnN0aWNreUVsZW1lbnQudHJpZ2dlcignc3RpY2t5LXN0YXJ0JywgW3NdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIC8vIHN0aWNreSBpcyBzdGFydGVkIGJ1dCBpdCBoYXZlIHRvIGJlIHJlcG9zaXRpb25lZFxuICAgICAgICAgICAgICBzLnN0aWNreUVsZW1lbnQudHJpZ2dlcignc3RpY2t5LXVwZGF0ZScsIFtzXSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzLmN1cnJlbnRUb3AgPT09IHMudG9wU3BhY2luZyAmJiBzLmN1cnJlbnRUb3AgPiBuZXdUb3AgfHwgcy5jdXJyZW50VG9wID09PSBudWxsICYmIG5ld1RvcCA8IHMudG9wU3BhY2luZykge1xuICAgICAgICAgICAgICAvLyBqdXN0IHJlYWNoZWQgYm90dG9tIHx8IGp1c3Qgc3RhcnRlZCB0byBzdGljayBidXQgYm90dG9tIGlzIGFscmVhZHkgcmVhY2hlZFxuICAgICAgICAgICAgICBzLnN0aWNreUVsZW1lbnQudHJpZ2dlcignc3RpY2t5LWJvdHRvbS1yZWFjaGVkJywgW3NdKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZihzLmN1cnJlbnRUb3AgIT09IG51bGwgJiYgbmV3VG9wID09PSBzLnRvcFNwYWNpbmcgJiYgcy5jdXJyZW50VG9wIDwgbmV3VG9wKSB7XG4gICAgICAgICAgICAgIC8vIHN0aWNreSBpcyBzdGFydGVkICYmIHN0aWNrZWQgYXQgdG9wU3BhY2luZyAmJiBvdmVyZmxvd2luZyBmcm9tIHRvcCBqdXN0IGZpbmlzaGVkXG4gICAgICAgICAgICAgIHMuc3RpY2t5RWxlbWVudC50cmlnZ2VyKCdzdGlja3ktYm90dG9tLXVucmVhY2hlZCcsIFtzXSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHMuY3VycmVudFRvcCA9IG5ld1RvcDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHJlc2l6ZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIHdpbmRvd0hlaWdodCA9ICR3aW5kb3cuaGVpZ2h0KCk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RpY2tlZC5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcyA9IHN0aWNrZWRbaV07XG4gICAgICAgIHZhciBuZXdXaWR0aCA9IG51bGw7XG4gICAgICAgIGlmIChzLmdldFdpZHRoRnJvbSkge1xuICAgICAgICAgICAgaWYgKHMucmVzcG9uc2l2ZVdpZHRoID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgbmV3V2lkdGggPSAkKHMuZ2V0V2lkdGhGcm9tKS53aWR0aCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYocy53aWR0aEZyb21XcmFwcGVyKSB7XG4gICAgICAgICAgICBuZXdXaWR0aCA9IHMuc3RpY2t5V3JhcHBlci53aWR0aCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuZXdXaWR0aCAhPSBudWxsKSB7XG4gICAgICAgICAgICBzLnN0aWNreUVsZW1lbnQuY3NzKCd3aWR0aCcsIG5ld1dpZHRoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIGluaXQ6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG8gPSAkLmV4dGVuZCh7fSwgZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBzdGlja3lFbGVtZW50ID0gJCh0aGlzKTtcblxuICAgICAgICAgIHZhciBzdGlja3lJZCA9IHN0aWNreUVsZW1lbnQuYXR0cignaWQnKTtcbiAgICAgICAgICB2YXIgc3RpY2t5SGVpZ2h0ID0gc3RpY2t5RWxlbWVudC5vdXRlckhlaWdodCgpO1xuICAgICAgICAgIHZhciB3cmFwcGVySWQgPSBzdGlja3lJZCA/IHN0aWNreUlkICsgJy0nICsgZGVmYXVsdHMud3JhcHBlckNsYXNzTmFtZSA6IGRlZmF1bHRzLndyYXBwZXJDbGFzc05hbWVcbiAgICAgICAgICB2YXIgd3JhcHBlciA9ICQoJzxkaXY+PC9kaXY+JylcbiAgICAgICAgICAgIC5hdHRyKCdpZCcsIHdyYXBwZXJJZClcbiAgICAgICAgICAgIC5hZGRDbGFzcyhvLndyYXBwZXJDbGFzc05hbWUpO1xuXG4gICAgICAgICAgc3RpY2t5RWxlbWVudC53cmFwQWxsKHdyYXBwZXIpO1xuXG4gICAgICAgICAgdmFyIHN0aWNreVdyYXBwZXIgPSBzdGlja3lFbGVtZW50LnBhcmVudCgpO1xuXG4gICAgICAgICAgaWYgKG8uY2VudGVyKSB7XG4gICAgICAgICAgICBzdGlja3lXcmFwcGVyLmNzcyh7d2lkdGg6c3RpY2t5RWxlbWVudC5vdXRlcldpZHRoKCksbWFyZ2luTGVmdDpcImF1dG9cIixtYXJnaW5SaWdodDpcImF1dG9cIn0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzdGlja3lFbGVtZW50LmNzcyhcImZsb2F0XCIpID09IFwicmlnaHRcIikge1xuICAgICAgICAgICAgc3RpY2t5RWxlbWVudC5jc3Moe1wiZmxvYXRcIjpcIm5vbmVcIn0pLnBhcmVudCgpLmNzcyh7XCJmbG9hdFwiOlwicmlnaHRcIn0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN0aWNreVdyYXBwZXIuY3NzKCdoZWlnaHQnLCBzdGlja3lIZWlnaHQpO1xuXG4gICAgICAgICAgby5zdGlja3lFbGVtZW50ID0gc3RpY2t5RWxlbWVudDtcbiAgICAgICAgICBvLnN0aWNreVdyYXBwZXIgPSBzdGlja3lXcmFwcGVyO1xuICAgICAgICAgIG8uY3VycmVudFRvcCAgICA9IG51bGw7XG5cbiAgICAgICAgICBzdGlja2VkLnB1c2gobyk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHVwZGF0ZTogc2Nyb2xsZXIsXG4gICAgICB1bnN0aWNrOiBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICAgIHZhciB1bnN0aWNreUVsZW1lbnQgPSAkKHRoYXQpO1xuXG4gICAgICAgICAgdmFyIHJlbW92ZUlkeCA9IC0xO1xuICAgICAgICAgIHZhciBpID0gc3RpY2tlZC5sZW5ndGg7XG4gICAgICAgICAgd2hpbGUgKGktLSA+IDApIHtcbiAgICAgICAgICAgIGlmIChzdGlja2VkW2ldLnN0aWNreUVsZW1lbnQuZ2V0KDApID09PSB0aGF0KSB7XG4gICAgICAgICAgICAgICAgc3BsaWNlLmNhbGwoc3RpY2tlZCxpLDEpO1xuICAgICAgICAgICAgICAgIHJlbW92ZUlkeCA9IGk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmKHJlbW92ZUlkeCAhPSAtMSkge1xuICAgICAgICAgICAgdW5zdGlja3lFbGVtZW50LnVud3JhcCgpO1xuICAgICAgICAgICAgdW5zdGlja3lFbGVtZW50XG4gICAgICAgICAgICAgIC5jc3Moe1xuICAgICAgICAgICAgICAgICd3aWR0aCc6ICcnLFxuICAgICAgICAgICAgICAgICdwb3NpdGlvbic6ICcnLFxuICAgICAgICAgICAgICAgICd0b3AnOiAnJyxcbiAgICAgICAgICAgICAgICAnZmxvYXQnOiAnJ1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcblxuICAvLyBzaG91bGQgYmUgbW9yZSBlZmZpY2llbnQgdGhhbiB1c2luZyAkd2luZG93LnNjcm9sbChzY3JvbGxlcikgYW5kICR3aW5kb3cucmVzaXplKHJlc2l6ZXIpOlxuICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgc2Nyb2xsZXIsIGZhbHNlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgcmVzaXplciwgZmFsc2UpO1xuICB9IGVsc2UgaWYgKHdpbmRvdy5hdHRhY2hFdmVudCkge1xuICAgIHdpbmRvdy5hdHRhY2hFdmVudCgnb25zY3JvbGwnLCBzY3JvbGxlcik7XG4gICAgd2luZG93LmF0dGFjaEV2ZW50KCdvbnJlc2l6ZScsIHJlc2l6ZXIpO1xuICB9XG5cbiAgJC5mbi5zdGlja3kgPSBmdW5jdGlvbihtZXRob2QpIHtcbiAgICBpZiAobWV0aG9kc1ttZXRob2RdKSB7XG4gICAgICByZXR1cm4gbWV0aG9kc1ttZXRob2RdLmFwcGx5KHRoaXMsIHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgbWV0aG9kID09PSAnb2JqZWN0JyB8fCAhbWV0aG9kICkge1xuICAgICAgcmV0dXJuIG1ldGhvZHMuaW5pdC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQuZXJyb3IoJ01ldGhvZCAnICsgbWV0aG9kICsgJyBkb2VzIG5vdCBleGlzdCBvbiBqUXVlcnkuc3RpY2t5Jyk7XG4gICAgfVxuICB9O1xuXG4gICQuZm4udW5zdGljayA9IGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgIGlmIChtZXRob2RzW21ldGhvZF0pIHtcbiAgICAgIHJldHVybiBtZXRob2RzW21ldGhvZF0uYXBwbHkodGhpcywgc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBtZXRob2QgPT09ICdvYmplY3QnIHx8ICFtZXRob2QgKSB7XG4gICAgICByZXR1cm4gbWV0aG9kcy51bnN0aWNrLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJC5lcnJvcignTWV0aG9kICcgKyBtZXRob2QgKyAnIGRvZXMgbm90IGV4aXN0IG9uIGpRdWVyeS5zdGlja3knKTtcbiAgICB9XG4gIH07XG4gICQoZnVuY3Rpb24oKSB7XG4gICAgc2V0VGltZW91dChzY3JvbGxlciwgMCk7XG4gIH0pO1xufSkoalF1ZXJ5KTtcblxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXtcbiAgICAgICQoXCIubmF2YmFyXCIpLnN0aWNreSh7dG9wU3BhY2luZzowfSk7XG4gICAgfSk7XG5cblxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBNYWduaWZpY1BvcHVwXG4gICAgICAgIHZhciBtYWduaWZQb3B1cCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICQoJy5wb3B1cC15b3V0dWJlJykubWFnbmlmaWNQb3B1cCh7XG4gICAgICAgICAgICAgIHR5cGU6ICdpZnJhbWUnLFxuICAgICAgICAgICAgICBtYWluQ2xhc3M6ICdtZnAtZmFkZScsXG4gICAgICAgICAgICAgIHJlbW92YWxEZWxheTogMTYwLFxuICAgICAgICAgICAgICBwcmVsb2FkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICBmaXhlZENvbnRlbnRQb3M6IGZhbHNlLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIENhbGwgdGhlIGZ1bmN0aW9uc1xuICAgICAgICBtYWduaWZQb3B1cCgpO1xuXG4gICAgICB9KTsiXSwibWFwcGluZ3MiOiI7QUFBQSxDQUFDLFVBQVVBLENBQUMsRUFBRTtFQUVWLFlBQVk7O0VBRVo7RUFDQUEsQ0FBQyxDQUFDLHVCQUF1QixDQUFDLENBQUNDLEtBQUssQ0FBQyxZQUFV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\n//# sourceURL=webpack-internal:///./resources/js/inicio.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/inicio.js"]();
/******/ 	
/******/ })()
;